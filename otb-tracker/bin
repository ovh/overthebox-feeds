#!/bin/sh
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

. /lib/functions.sh
. /lib/functions/network.sh

[ -n "$1" ] && [ -n "$2" ] || exit

# retrieve args
OTB_TRACKER_INTERFACE="$1"
OTB_TRACKER_CALL="$2"
shift 2

# export vars
export OTB_TRACKER_INTERFACE
export OTB_TRACKER_CALL
export OTB_TRACKER_HOST
export OTB_TRACKER_INITIAL_TIMEOUT
export OTB_TRACKER_TIMEOUT
export OTB_TRACKER_TRIES
export OTB_TRACKER_INTERVAL
export OTB_TRACKER_STATUS
export OTB_TRACKER_RESULT
export OTB_TRACKER_DEVICE
export OTB_TRACKER_INTERFACE_IP
export OTB_TRACKER_INTERFACE_GATEWAY

# main loop
while true; do
	# setup tracker variables
	OTB_TRACKER_INTERFACE_IP=
	OTB_TRACKER_INTERFACE_GATEWAY=
	OTB_TRACKER_DEVICE=
	OTB_TRACKER_STATUS="ERROR"
	OTB_TRACKER_RESULT=
	OTB_TRACKER_TIMEOUT="$OTB_TRACKER_INITIAL_TIMEOUT"

	# retrieve iface ip and gateway and device
	network_flush_cache
	network_get_ipaddr OTB_TRACKER_INTERFACE_IP "$OTB_TRACKER_INTERFACE"
	network_get_gateway OTB_TRACKER_INTERFACE_GATEWAY "$OTB_TRACKER_INTERFACE"
	config_load network
	config_get OTB_TRACKER_DEVICE "$OTB_TRACKER_INTERFACE" ifname

	# execute specific tracker
	if [ -n "$OTB_TRACKER_DEVICE" ] && [ -n "$OTB_TRACKER_INTERFACE_IP" ] && [ -n "$OTB_TRACKER_INTERFACE_GATEWAY" ];then
		# setup loop variable
		tries="$OTB_TRACKER_TRIES"
		# loop until tries attempts have been reached or an attempt succeed
		while [ "$tries" -gt 0 ]; do
			OTB_TRACKER_RESULT=$(/usr/share/otb/trackers.d/"$OTB_TRACKER_CALL" "$@")
			[ "$?" = 0 ] && OTB_TRACKER_STATUS="OK" && break
			tries=$((tries - 1))
			OTB_TRACKER_TIMEOUT=$((OTB_TRACKER_TIMEOUT * 2))
		done
	fi

	# post tracking
	for tracker_bin in /usr/share/otb/post-tracking.d/*; do
		[ -x "$tracker_bin" ] || continue
		#shellcheck disable=SC2091
		$tracker_bin
	done
	sleep "$OTB_TRACKER_INTERVAL"
done
