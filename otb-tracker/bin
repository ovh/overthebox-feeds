#!/bin/sh
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

. /lib/functions.sh
. /lib/functions/network.sh

[ -n "$1" ] && [ -n "$2" ] || exit

# retrieve args
OTB_TRACKER_INTERFACE="$1"
OTB_TRACKER_CALL="$2"
shift 2

# export vars
export OTB_TRACKER_INTERFACE
export OTB_TRACKER_CALL
export OTB_TRACKER_HOST
export OTB_TRACKER_TIMEOUT
export OTB_TRACKER_TRIES
export OTB_TRACKER_INTERVAL
export OTB_TRACKER_STATUS
export OTB_TRACKER_RESULT
export OTB_TRACKER_DEVICE
export OTB_TRACKER_DEVICE_IP
export OTB_TRACKER_DEVICE_GATEWAY

# Set constants for rto updating
readonly K=3
readonly alpha=0.25
readonly beta=0.25
srtt=
rttvar=
rto="$OTB_TRACKER_TIMEOUT"

_update_timeout() {
	# round to greater unit
	[ "${rto#*.}" != "$rto" -a "${rto#*.}" -gt 0 ] && OTB_TRACKER_TIMEOUT=$((${rto%.*}+1)) || OTB_TRACKER_TIMEOUT=${rto%.*}
}

_absolute() {
	echo "${1#-}"
}

# update rto as explained in rfc6298
_update_rto() {
	if [ -z "$srtt" ]; then
		srtt="$1"
		rttvar=$(echo "scale=3;$1/2"|bc)
	else
		diff=$(_absolute "$(echo "scale=2;$srtt-$1"|bc)")
		rttvar=$(echo "scale=3;(1-$beta)*$rttvar + $beta*$diff"|bc)
		srtt=$(echo "scale=3;(1-$alpha)*$srtt + $alpha*$1"|bc)
	fi
	rto=$(echo "$srtt+$K*$rttvar"|bc)
	[ "$(echo "$rto < 1"|bc)" -eq 1 ] && rto=1
}

# main loop
while true; do
	# setup tracker variables
	OTB_TRACKER_DEVICE_IP=
	OTB_TRACKER_DEVICE_GATEWAY=
	OTB_TRACKER_DEVICE=
	OTB_TRACKER_STATUS="ERROR"
	OTB_TRACKER_RESULT=
	_update_timeout


	# retrieve iface ip and gateway and device
	network_flush_cache
	network_get_ipaddr OTB_TRACKER_DEVICE_IP "$OTB_TRACKER_INTERFACE"
	network_get_gateway OTB_TRACKER_DEVICE_GATEWAY "$OTB_TRACKER_INTERFACE"
	config_load network
	config_get OTB_TRACKER_DEVICE "$OTB_TRACKER_INTERFACE" ifname

	# execute specific tracker
	if [ -n "$OTB_TRACKER_DEVICE" ] && [ -n "$OTB_TRACKER_DEVICE_IP" ] && [ -n "$OTB_TRACKER_DEVICE_GATEWAY" ];then
		# setup loop variable
		tries="$OTB_TRACKER_TRIES"
		# loop until tries attempts have been reached
		while [ "$tries" -gt 0 ]; do
			t1=$(date +%s.%3N)
			OTB_TRACKER_RESULT=$(/usr/share/otb/trackers.d/"$OTB_TRACKER_CALL" "$@")
			if [ "$?" = 0 ];then
				# tracking command succeed
				t2=$(date +%s.%3N)
				last_rtt=$(echo "$t2-$t1"|bc)
				_update_rto "$last_rtt"
				OTB_TRACKER_STATUS="OK"
				break
			fi
			tries=$((tries - 1))
			OTB_TRACKER_TIMEOUT=$((OTB_TRACKER_TIMEOUT * 2))
		done
	fi

	# post tracking
	for tracker_bin in /usr/share/otb/post-tracking.d/*; do
		[ -x "$tracker_bin" ] || continue
		#shellcheck disable=SC2091
		$tracker_bin
	done
	sleep "$OTB_TRACKER_INTERVAL"
done
