#!/bin/sh
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

name=$0
basename="$(basename "$0")"

usage() {
	printf "Usage: %s: [-t TIMEOUT] [-v INTERVAL] [ -r RETRY ] [ -i INTERFACE ] \n" "${name}"
	exit 2
}

log() {
	logger -p daemon.info -t "${basename}" "$@"
}

uri=http://ifconfig.ovh
timeout=5
interval=1
retry=0
interace=

while getopts "t:v:r:i:" opt; do
	case $opt in
		t) timeout="${OPTARG}";;
		v) interval="${OPTARG}";;
		r) retry="${OPTARG}";;
		i) interface="${OPTARG}";;
		*) usage;;
	esac
done

device=
metric=
proto=

. /lib/functions.sh
. /lib/functions/network.sh

# TODO store the otb server ip elsewhere
otb_host=
config_load shadowsocks
config_get otb_host proxy server

config_load network
config_get device "$interface" ifname
config_get metric "$interface" metric
config_get proto "$interface" proto

# TODO: should xtun0 be the default route if xtun0 is present ?
if [ "$interface" = "tun0" ]; then
	# Default route
	metric=0
fi

if [ "$interface" = "tun0" ] || [ "$interface" = "xtun0" ] ; then
	# Don't add a static route to the otb host through tun0 and xtun0
	otb_host=
fi

log "Starting tracker on $device"

while true; do
	sleep "$interval"

	# tun0 does not have the gateway configured on startup
	gw=
	network_get_gateway gw "$interface"

	if curl -s --silent --show-error --max-time "$timeout" --retry "$retry" --interface "$device" "$uri" > /dev/null; then
		if [ "$proto" != "dhcp" ]; then
			if ip route add default via "$gw" dev "$device" metric "$metric" 2>/dev/null; then
				log "adding the default route for $device using the gateway $gw and metric $metric"
			fi
		fi

		if [ -n "$otb_host" ]; then
			if ip route add "$otb_host" via "$gw" dev "$device" metric "$metric" 2>/dev/null; then
				log "adding the static route to the otb_host $otb_host on $device using the gateway $gw and metric $metric"
			fi
		fi
	else
		[ -z "$gw" ] && continue
		if [ "$proto" != "dhcp" ]; then
			if ip route del default via "$gw" dev "$device" metric "$metric" 2>/dev/null; then
				log "removing the default route for $device using the gateway $gw and metric $metric"
			fi
		fi
		if [ -n "$otb_host" ]; then
			if ip route del "$otb_host" via "$gw" dev "$device" metric "$metric" 2>/dev/null; then
				log "removing the static route to the otb_host $otb_host on $device using the gateway $gw and metric $metric"
			fi
		fi
	fi
done
