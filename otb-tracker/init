#!/bin/sh /etc/rc.common
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

START=90
STOP=10

USE_PROCD=1

_validate_section() {
	uci_validate_section otb-tracker "$1" "$2" \
		'timeout:uinteger' \
		'tries:uinteger' \
		'interval:uinteger' \
		'options:string'
	hosts=$(uci -q get "otb-tracker.$2.hosts")
	[ -n "$hosts" ] && OTB_TRACKER_HOSTS="$hosts"
	[ -n "$tries" ] && OTB_TRACKER_TRIES="$tries"
	[ -n "$timeout" ] && OTB_TRACKER_TIMEOUT="$timeout"
	[ -n "$options" ] && OTB_TRACKER_OPTIONS="$options"
	[ -n "$interval" ] && OTB_TRACKER_INTERVAL="$interval"
}

_launch_tracker() {
	case "$1" in
		loopback|lan*|if0*) return;;
	esac
	config_get interface_type "$1" type
	_validate_section "defaults" "defaults"
	_validate_section "rule_type" "$interface_type"
	_validate_section "interface" "$1"
	OTB_TRACKER_DEVICE= ; config_get OTB_TRACKER_DEVICE "$1" ifname
	OTB_TRACKER_TABLE=  ; config_get OTB_TRACKER_TABLE "$1" ip4table
	[ -z "$OTB_TRACKER_DEVICE" ] || [ -z "$OTB_TRACKER_TABLE" ] && return
	procd_open_instance
	# shellcheck disable=SC2086
	procd_set_param command /bin/otb-tracker "$1" $OTB_TRACKER_OPTIONS
	procd_append_param env \
		"OTB_TRACKER_HOSTS=$OTB_TRACKER_HOSTS" \
		"OTB_TRACKER_TIMEOUT=$OTB_TRACKER_TIMEOUT" \
		"OTB_TRACKER_TRIES=$OTB_TRACKER_TRIES" \
		"OTB_TRACKER_INTERVAL=$OTB_TRACKER_INTERVAL" \
		"OTB_TRACKER_TABLE=$OTB_TRACKER_TABLE" \
		"OTB_TRACKER_DEVICE=$OTB_TRACKER_DEVICE"
	procd_set_param respawn 0 10 0
	procd_set_param stderr 1
	procd_close_instance
}

start_service() {
	config_load network
	config_foreach _launch_tracker interface
}

service_triggers() {
	procd_add_reload_trigger otb-tracker network
}

reload_service() {
	stop
	start
}
