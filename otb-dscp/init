#!/bin/sh /etc/rc.common
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

# shellcheck disable=SC2034
START=90
# shellcheck disable=SC2034
STOP=10
# shellcheck disable=SC2034
USE_PROCD=1

COMMIT=$(date +%s_$$)

# shellcheck disable=SC1091
. /lib/overthebox

# shellcheck disable=SC1091
. /lib/functions.sh

# Get the lan interface name
lan_device=
config_load network
config_get lan_device lan ifname

config_load dscp

_add_ipt() {
	iptables -w -t mangle -A dscp "$@"
}

_add_ipt_dscp_mark() {
	# xtun (hex) -> 0x7874756e
	iptables -w -t mangle -A dscp_mark -m dscp --dscp-class "$1" -j MARK --set-mark 0x7874756e
}

_add_dscp_rules() {
	proto=     ; config_get proto "$1" proto all
	src_ip=    ; config_get src_ip "$1" src_ip 0.0.0.0/0
	src_port=  ; config_get src_port "$1" src_port 0:65535
	dest_ip=   ; config_get dest_ip "$1" dest_ip 0.0.0.0/0
	dest_port= ; config_get dest_port "$1" dest_port 0:65535
	class=     ; config_get class "$1" class
	direction= ; config_get direction "$1" direction "upload"
	comment=   ; config_get comment "$1" comment "-"

	if [ "$direction" != "download" ]; then
		_add_rule() {
			_add_ipt -p "$proto" -s "$src_ip" -d "$dest_ip" "$@" -m comment --comment "$comment" -j DSCP --set-dscp-class "$class"
			_add_ipt -p "$proto" -s "$src_ip" -d "$dest_ip" "$@" -m comment --comment "$comment" -j RETURN
		}
		case "$proto" in
			tcp|udp)
				_add_rule -m multiport --sports "$src_port" -m multiport --dports "$dest_port"
				;;
			*)
				_add_rule
				;;
		esac
	fi

	if [ "$direction" != "upload" ]; then
		otb_save_call_api POST "dscp/$COMMIT" <<-EOF
		{
			"proto": "$proto",
			"src_ip": "$src_ip",
			"src_port": "$src_port",
			"dest_ip": "$dest_ip",
			"dest_port": "$dest_port",
			"class": "$class"
		}
		EOF
	fi
}

_add_static_length_rule() {
	_add_ipt -p tcp -m length --length "$1" -j DSCP --set-dscp-class "$2"
	_add_ipt -p tcp -m length --length "$1" -j RETURN
}

_remove_fmwark_chain() {
	iptables -w -t mangle -F dscp_mark 2>/dev/null || return
	iptables -w -t mangle -D PREROUTING -i "$lan_device" -j dscp_mark
	iptables -w -t mangle -X dscp_mark
}

_remove_dscp_chain() {
	iptables -w -t mangle -F dscp 2>/dev/null || return
	iptables -w -t mangle -D PREROUTING -i "$lan_device" -j dscp
	iptables -w -t mangle -X dscp
}

_add_fwmark_chain() {
	iptables -w -t mangle -N dscp_mark
	iptables -w -t mangle -I PREROUTING -i "$lan_device" -j dscp_mark
	for class in cs3 cs4 cs5 cs6 cs7; do
		_add_ipt_dscp_mark "$class"
	done
}

_add_dscp_chain() {
	iptables -w -t mangle -N dscp
	iptables -w -t mangle -I PREROUTING -i "$lan_device" -j dscp
}

start_service() {
	# Cleanup
	_remove_dscp_chain
	_remove_fmwark_chain

	# This order is important
	_add_fwmark_chain
	_add_dscp_chain

	# Add rules base on the user configuration
	config_foreach _add_dscp_rules classify

	# Add rules based on the length of the packets
	_add_static_length_rule :89 cs3     # Interactive traffic
	_add_static_length_rule 90:511 cs2  # Light traffic
	_add_static_length_rule 512: cs1    # Heavy traffic

	# Commit remote dscp setting
	echo | otb_save_call_api POST "dscp/$COMMIT/commit"
}

stop_service() {
	_remove_dscp_chain
	_remove_fmwark_chain
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger dscp
}
