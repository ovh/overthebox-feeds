# vim: set ft=sh noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

_log() {
	logger -t autoroute "$@"
}

_setup_route() {
	if ip route "$1" "$2" via "$3" dev "$4" metric "$5" 2>/dev/null; then
		_log "$1 $2 route for $4 using gateway $3 and metric $5"
	fi
}

_setup_high_priority_rule() {
	mark="0x7874756e"
	# We can't select the route using ip rule list with our version of ip route
	matching_rules=$(ip rule list | grep -c "fwmark $mark")
	[ "$matching_rules" -gt 0 ] && [ "$1" = "add" ] && return
	[ "$matching_rules" = 0 ] && [ "$1" = "del" ] && return

	_log "$1 rule matching $mark using table $2"
	ip rule "$1" fwmark "$mark" table "$2"
}

config_load shadowsocks
otb_host= ; config_get otb_host proxy server

config_load network
otb_metric= ; config_get otb_metric "$OTB_TRACKER_INTERFACE" metric
otb_table=  ; config_get otb_table "$OTB_TRACKER_INTERFACE" ip4table

[ "$OTB_TRACKER_STATUS" = "OK" ] && action="add" || action="del"

case "$OTB_TRACKER_INTERFACE" in
	xtun0)
		_setup_high_priority_rule "$action" "$otb_table"
		exit
		;;
	tun0)
		# Don't add a static route to the otb host
		otb_host=
		# Default route
		otb_metric=0
		;;
esac

_setup_route "$action" default "$OTB_TRACKER_DEVICE_GATEWAY" "$OTB_TRACKER_DEVICE" "$otb_metric"
[ -n "$otb_host" ] && _setup_route \
	"$action" \
	"$otb_host" \
	"$OTB_TRACKER_DEVICE_GATEWAY" \
	"$OTB_TRACKER_DEVICE" \
	"$otb_metric"


dns_servers=$(ubus call "network.interface.$OTB_TRACKER_INTERFACE" status | \
	jq -r '."dns-server" // [] | join(" ")')

[ -n "$dns_servers" ] && for dns_server in $dns_servers; do
	 _setup_route \
		"$action" \
		"$dns_server" \
		"$OTB_TRACKER_DEVICE_GATEWAY" \
		"$OTB_TRACKER_DEVICE" \
		"$otb_metric"
done
