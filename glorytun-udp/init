#!/bin/sh /etc/rc.common
# shellcheck disable=SC1091,SC2039
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :
# Copyright (C) 2015 ovh.com

# shellcheck disable=SC2034
{
	START=90
	STOP=10
	USE_PROCD=1
}

PROG_NAME=glorytun-udp
PROG=/usr/sbin/$PROG_NAME

_log() {
	logger -p daemon.info -t $PROG_NAME "$@"
}

_err() {
	logger -p daemon.err -t $PROG_NAME "$@"
}

validate_section() {
	uci_validate_section glorytun mud "$1" \
		'enable:bool:0'        \
		'key:string'           \
		'server:host'          \
		'port:port'            \
		'dev:string'           \
		'mtu:uinteger:1450'    \
		'mtu_auto:bool'
}

_setup_bind_args() {
	multipath=
	config_get multipath "$1" multipath

	case "$multipath" in
	on|master)
		ipaddr=
		network_get_ipaddr ipaddr "$1"
		[ -n "$ipaddr" ] && BIND_ARGS="${BIND_ARGS}${ipaddr},"
		;;
	esac
}

start_instance() {
	local enable key server port dev mtu

	validate_section "$1" || {
		_err "validation failed"
		return 1
	}

	[ "$enable" = "1" ] || return 1
	[ -n "$key" ] || return 1
	[ -n "$server" ] || return 1

	echo "$key" > /tmp/${PROG_NAME}.key
	key=""

	. /lib/functions.sh
	. /lib/functions/network.sh

	BIND_ARGS=
	config_load network
	config_foreach _setup_bind_args interface

	[ -n "$BIND_ARGS" ] || return 1

	case "$mtu_auto" in
		true|yes|on|1) ;;
		*) mtu_auto=
	esac

	_log "starting $PROG_NAME instance $*"

	procd_open_instance

	# shellcheck disable=SC2086,SC2154
	procd_set_param command $PROG \
		bind "$BIND_ARGS" \
		keyfile /tmp/$PROG_NAME.key \
		host "$server" \
		${dev:+dev "$dev"} \
		${port:+port "$port" bind-port "$port"} \
		${mtu:+mtu "$mtu"} \
		${mtu_auto:+mtu-auto} \
		v4only

	procd_set_param respawn 0 30 0
	procd_set_param file /tmp/${PROG_NAME}.key

	procd_set_param stdout 1
	procd_set_param stderr 1

	procd_close_instance
}

start_service() {
	config_load glorytun
	config_foreach start_instance mud
}

service_triggers() {
	procd_add_reload_trigger glorytun network
	procd_add_raw_trigger "interface.*" 2000 /etc/init.d/$PROG_NAME reload
}
