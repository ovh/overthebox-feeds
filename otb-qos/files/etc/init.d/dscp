#!/bin/sh /etc/rc.common
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

START=60
COMMID="$(date +%s)_$$"

# Generate dscp tagging preferences
IPT="iptables -t mangle -w"
genrateDscp() {
	local ipset proto src_ip src_port dest_ip $ipset dest_port class

	config_get proto "$1" proto all
	config_get ipset "$1" ipset
	config_get src_ip "$1" src_ip 0.0.0.0/0
	config_get src_port "$1" src_port 0:65535
	config_get dest_ip "$1" dest_ip 0.0.0.0/0
	config_get dest_port "$1" dest_port 0:65535
	config_get class "$1" class
	config_get direction "$1" direction "upload"

	# Take OTB point of view when using both direction (inverse source and destination)
	if [ "$direction" = "both" ]; then
		config_get src_ip "$1" dest_ip 0.0.0.0/0
		config_get src_port "$1" dest_port 0:65535
		config_get dest_ip "$1" src_ip 0.0.0.0/0
		config_get dest_port "$1" src_port 0:65535
	fi

	local dest=${dest_ip:-$ipset}
	if [ "$direction" = "upload" -o "$direction" = "both" ]; then
		case $proto in
			tcp)
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m multiport --sports "$src_port" -m multiport --dports "$dest_port" -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class "$class"
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m multiport --sports "$src_port" -m multiport --dports "$dest_port" -m comment --comment "dscp_$COMMID" -j RETURN
				;;
			udp)
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m multiport --sports "$src_port" -m multiport --dports "$dest_port" -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class "$class"
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m multiport --sports "$src_port" -m multiport --dports "$dest_port" -m comment --comment "dscp_$COMMID" -j RETURN
				;;
			*)
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class "$class"
				$IPT -A dscp -p "$proto" -s "$src_ip" -d "$dest" -m comment --comment "dscp_$COMMID" -j RETURN
				;;
		esac
	fi
}

generateStaticRules() {
	local COMMID=$1

	# Interactive traffic
	$IPT -A dscp -p tcp -m length --length :89 -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class cs3
	$IPT -A dscp -p tcp -m length --length :89 -m comment --comment "dscp_$COMMID" -j RETURN
	# Light traffic
	$IPT -A dscp -p tcp -m length --length 90:511 -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class cs2
	$IPT -A dscp -p tcp -m length --length 90:511 -m comment --comment "dscp_$COMMID" -j RETURN
	# Heavy traffic
	$IPT -A dscp -p tcp -m length --length 512: -m comment --comment "dscp_$COMMID" -j DSCP --set-dscp-class cs1
	$IPT -A dscp -p tcp -m length --length 512: -m comment --comment "dscp_$COMMID" -j RETURN
}

reload()
{
	# Generate DSCP table
	config_load dscp
	config_foreach genrateDscp classify
	generateStaticRules "$COMMID"
	# Clean Old DSCP values
	iptables-save | grep "A dscp" | grep "dscp_" | grep -v "dscp_$COMMID" | sed "s/-A/\/usr\/sbin\/iptables -t mangle -w -D/g" | sh
	# Tell trackers to resend QoS to API
	if [ "$1" != "tun0" ]; then
		/usr/bin/pkill -USR2 -f "mwan3track -i tun0"
	fi
}

restart()
{
	# Flush DSCP table
	$IPT -F dscp 2>/dev/null
	reload "$@"
}

start()
{
	# Clear DSCP rules before recreate
	$IPT -F dscp 2>/dev/null
	$IPT -N dscp 2>/dev/null
	# Generate DSCP table
	config_load dscp
	config_foreach genrateDscp classify
	generateStaticRules "$COMMID"
	# Add it to PREROUTING
	$IPT -D PREROUTING -j dscp 2>/dev/null
	$IPT -I PREROUTING -j dscp
	# Tell trackers to resend QoS to API
	/usr/bin/pkill -USR2 -f "mwan3track -i tun0"
}

stop()
{
	# Clear DSCP rules before recreate
	$IPT -F dscp 2>/dev/null
	$IPT -N dscp 2>/dev/null
}

service_triggers() {
	procd_add_reload_trigger dscp
}
