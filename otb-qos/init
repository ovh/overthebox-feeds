#!/bin/sh /etc/rc.common
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

# shellcheck disable=SC1091
. /lib/functions.sh
# shellcheck disable=SC1091
. /lib/overthebox

config_load network

# shellcheck disable=SC2034
START=90
# shellcheck disable=SC2034
STOP=10
# shellcheck disable=SC2034
USE_PROCD=1

_log() {
	logger -t otb-qos "$@"
}

_setup_qos() {
	trafficcontrol=
	config_get trafficcontrol "$1" trafficcontrol
	[ "$trafficcontrol" = static ] || return 0

	multipath='' ; config_get multipath "$1" multipath
	case "$multipath" in
		master|on|backup|handover) ;;
		*) return 0 ;;
	esac

	ifname=''   ; config_get ifname   "$1" ifname
	metric=''   ; config_get metric   "$1" metric
	download='' ; config_get download "$1" download
	upload=''   ; config_get upload   "$1" upload

	_log "setting upload QoS on $ifname [$1] to ${upload}kbps"
	tc qdisc rep dev "$ifname" root cake bandwidth "$upload"kbit diffserv4 flows memlimit 10m

	# Get the public IP
	public_ip=$(ubus call "network.interface.$1" status | jq -r .data.public_ip)
	if [ "$public_ip" = "null" ]; then
		_log "missing public IP for $ifname, can't apply the download QoS for now"
		return 0
	fi

	_log "sending QoS download's values for $ifname [$1] - maximum download ${download}kbps"
	#shellcheck disable=SC2016
	jq -n -c \
		--arg ifname "$ifname" \
		--arg metric "$metric" \
		--arg download "$download" \
		--arg upload "$upload" \
		--arg public_ip "$public_ip" \
		'{
			interface: $ifname,
			metric: $metric,
			wan_ip: $public_ip,
			downlink: $download,
			uplink: $upload,
		}' | otb_todo otb_call_api PUT qos -d@-
}

_stop_qos() {
	ifname=
	config_get ifname "$1" ifname

	if tc qdisc del dev "$ifname" root cake 2>/dev/null; then
		_log "upload QoS deleted on $ifname [$1]"
	fi
}

start_service() {
	config_foreach _setup_qos interface
}

stop_service() {
	config_foreach _stop_qos interface
	otb_todo otb_call_api DELETE qos </dev/null
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger network
}
