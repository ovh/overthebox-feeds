<!-- vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4 : -->
<%
local uci               = require("luci.model.uci").cursor()
local device_id         = uci:get("overthebox", "me", "device_id")
local service           = uci:get("overthebox", "me", "service")
local wan               = uci:get("network", "wan")
%>
<%+header%>
<h2><%:Overview%></h2>
<fieldset class="cbi-section">
    <legend>Informations</legend>
    <div class="table">
        <div class="tr">
            <div class="td right" width="33%"><strong>Device</strong></div>
            <div class="td left"><%=device_id%></div>
        </div>
        <div class="tr">
            <div class="td right" width="33%"><strong>Service</strong></div>
            <div class="td left"><%if service then write(service) else%><div id="service_div"></div><%end%></div>
        </div>
    </div>
</fieldset>
<%if service then%>
<fieldset class="cbi-section">
    <legend>Paths</legend>
    <div class="table" id="paths_table"><em>Collecting data...</em></div>
</fieldset>

<fieldset class="cbi-section">
    <legend>Active DHCP Leases</legend>
    <div class="table" id="lease_status_table"><em>Collecting data...</em></div>
</fieldset>

<script type="text/javascript">
    function prettySize(fileSizeInByte) {
        var bits = fileSizeInByte * 8;
        var prefixes = ['', 'k', 'M', 'G'];
        var log = Math.min(Math.log10(bits) / 3 | 0, prefixes.length - 1);
        return (bits * Math.pow(10, -log * 3)).toFixed(1) + ' ' + prefixes[log] + 'bit/s';
    }

    function prettyDuration(durationSec) {
        if (durationSec === null) { return "undefined"; }
        if (durationSec <= 0)     { return "expired";   }

        var hours = Math.floor(durationSec / 3600);
        var minutes = Math.floor((durationSec % 3600) / 60);
        var seconds = durationSec % 60;

        var ret = '';
        if (hours > 0)   { ret += hours   + ' hours ';   }
        if (minutes > 0) { ret += minutes + ' minutes '; }
        return ret + seconds + ' seconds';
    }

    XHR.poll(1, '<%=url("admin/glorytun/path")%>', null, function(x,p) {
        var d = document.getElementById("paths_table");
        if (!d) return;
        var label = [
            "State", "Status",
            "Local IP", "Public IP",
            "RTT", "MTU",
            "Upload MAX",
            "Download MAX",
        ];
        var txt = '<div class="tr table-titles">';
        label.forEach(function(e) {
            txt += '<div class="th">'+e+'</div>';
        });
        txt += '</div>';
        for (var i=0; p && i<p.length; i++) {
            txt += '<div class="tr">';
            var value = [
                p[i].state, p[i].status,
                p[i].bind.ipaddr + ' (' + p[i].bind.port + ')',
                p[i].public.ipaddr + ' (' + p[i].public.port + ')',
                p[i].rtt + " ms",
                p[i].mtu + 28 + " bytes",
                prettySize(p[i].rate_tx),
                prettySize(p[i].rate_rx),
            ];
            for (var j=0; j<value.length; j++) {
                txt += '<div class="td" data-title="'+label[j]+'">'+value[j]+'</div>';
            }
            txt += '</div>';
        }
        d.innerHTML = txt;
    });

    XHR.poll(1, '<%=url("admin/overthebox/dhcp_leases_status")%>', null, function(x,p) {
        var d = document.getElementById("lease_status_table");
        if (!d) return;
        var label = [
            "Hostname",
            "IP", "MAC",
            "Lease time remaining",
        ];
        var txt = '<div class="tr table-titles">';
        label.forEach(function(e) {
            txt += '<div class="th">'+e+'</div>';
        });
        txt += '</div>';
        for (var i=0; p && i<p.length; i++) {
            txt += '<div class="tr">';
            var value = [
                p[i].hostname,
                p[i].ipaddr, p[i].macaddr,
                prettyDuration(p[i].expires),
            ];
            for (var j=0; j<value.length; j++) {
                txt += '<div class="td" data-title="'+label[j]+'">'+value[j]+'</div>';
            }
            txt += '</div>';
        }
        d.innerHTML = txt;
    });
</script>
<%else%>
<script type="text/javascript" src="<%=resource%>/sha1.min.js"></script>
<script type="text/javascript">
    function get_cookie(name) {
        var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
        return v ? v[2] : null;
    }

    function set_cookie(name, value) {
        document.cookie = name + "=" + value;
    }

    XHR.prototype.send_json = function(method, url, headers, data, callback) {
        this.reinit();
        var xhr = this._xmlHttp;
        xhr.onreadystatechange = function() {
            xhr.readyState == 4 && callback(xhr, JSON.parse(xhr.responseText));
        };
        xhr.open(method, url, true);
        xhr.setRequestHeader("Content-type", "application/json");
        for (h in headers) {
            xhr.setRequestHeader(h, headers[h]);
        }
        xhr.send(typeof data == "string" ? data : JSON.stringify(data));
    }

    function apiovhcom(method, query, body, callback) {
        var data = body ? JSON.stringify(body) : null;
        (new XHR()).get('<%=url("admin/overthebox/time")%>', null, function(x, p) {
            if (x.status == 200 && p && p.timestamp) {
                var sign = "$1$" + hex_sha1([
                    ovh_as, ovh_ck,
                    method, ovh_uri + query,
                    data, p.timestamp
                ].join("+"));
                (new XHR()).send_json(method, ovh_uri + query, {
                    "X-Ovh-Application": ovh_ak,
                    "X-Ovh-Timestamp": p.timestamp,
                    "X-Ovh-Signature": sign,
                    "X-Ovh-Consumer": ovh_ck
                }, data, function(x, p) {
                    callback(x, p);
                });
            }
        });
    }

    var ovh_uri = "https://eu.api.ovh.com/1.0";
    var ovh_ak = "rxaOYP724BG7eG76";
    var ovh_as = "4DOAMmAqBVmesDM5Jjp0mRQkBYleqded";
    var ovh_ck = get_cookie("consumerKey");
    var service_div = document.getElementById("service_div");

    if (ovh_ck && ovh_ck.length > 0) {
        apiovhcom("GET", "/overTheBox", null, function(x, p) {
            if (x.status == 200 && p) {
                var e = document.createElement("select");
                for (var i=0; i<p.length; i++) {
                    var o = document.createElement("option");
                    o.value = i;
                    o.text = p[i];
                    e.appendChild(o);
                }
                var b = document.createElement("input");
                b.setAttribute("type", "button");
                b.setAttribute("class", "cbi-button cbi-button-apply");
                b.setAttribute("value", "Link device");
                b.onclick = function() {
                    var service = e.options[e.selectedIndex].text;
                    apiovhcom("POST", "/overTheBox/" + service + "/linkDevice", {
                        "deviceId": "<%=device_id%>"
                    }, function (x, p) {
                        if (x.status == 200 || x.status == 409) {
                            (new XHR()).get('<%=url("admin/overthebox/confirm_service")%>', {
                                "service": service
                            }, function (x) {
                                x.status == 200 && window.location.reload();
                            });
                        }
                    });
                };
                service_div.appendChild(e);
                service_div.appendChild(b);
            } else {
                set_cookie("consumerKey", "");
                window.location.reload();
            }
        });
    } else {
        var e = document.createElement("input");
        e.setAttribute("type", "button");
        e.setAttribute("class", "cbi-button cbi-button-apply");
        e.setAttribute("value", "Get services list");
        e.onclick = function() {
            (new XHR()).send_json("POST", ovh_uri + "/auth/credential",
                { "X-Ovh-Application": ovh_ak },
                { accessRules: [
                    { method: "GET",  path: "/overTheBox" },
                    { method: "POST", path: "/overTheBox/*/linkDevice" }
                ], redirection: window.location.href
                }, function(x, p) {
                    if (p && p.consumerKey && p.validationUrl) {
                        set_cookie("consumerKey", p.consumerKey);
                        window.location.replace(p.validationUrl);
                    }
                }
            );
        };
        service_div.appendChild(e);
    }
</script>
<%end%>
<%+footer%>
