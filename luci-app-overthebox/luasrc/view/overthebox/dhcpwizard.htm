<%
-- Copyright 2015 OVH (OverTheBox@ovh.net)
-- Simon Lelievre (simon.lelievre@corp.ovh.com)
-- Sebastien Duponcheel (sebastien.duponcheel@ovh.net)
--
-- This file is part of OverTheBox for OpenWrt.
--
--    OverTheBox is free software: you can redistribute it and/or modify
--    it under the terms of the GNU General Public License as published by
--    the Free Software Foundation, either version 3 of the License, or
--    (at your option) any later version.
--
--    OverTheBox is distributed in the hope that it will be useful,
--    but WITHOUT ANY WARRANTY; without even the implied warranty of
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--    GNU General Public License for more details.
--
--    You should have received a copy of the GNU General Public License
--    along with OverTheBox.  If not, see (http://www.gnu.org/licenses/)
-%>
<%
local fs  = require "nixio.fs"
local sys = require "luci.sys"
local uci = require "luci.model.uci".cursor()


local has_dhcpdiscovery = fs.access("/tmp/dhcpdiscovery/dhcpdiscovery")
%>

<!-- begin of DHCP Wizard section -->
<% if has_dhcpdiscovery then %>
<link rel="stylesheet" type="text/css" href="<%=resource%>/ovh/css/dhcpwizard.css">

<script type="text/javascript">//<![CDATA[
	var stxhr = new XHR();

	var recheckTimeout = false;
	function recheck_dhpcserver()
	{
		// display a loading icon
		recheckTimeout = false;
		// call backend
		stxhr.get('<%=luci.dispatcher.build_url("admin", "overthebox", "dhcp_recheck")%>', null,
			function(x)
			{
	                        // Force reload of page
	                        window.setTimeout(function() {
	                                location.href='<%=luci.dispatcher.build_url("admin/overthebox/overview")%>'
	                        }, 1000);
			}
	 	);
	}

	function skiptimer()
	{
		stxhr.get('<%=luci.dispatcher.build_url("admin", "overthebox", "dhcp_skiptimer")%>', null,
			function(x)
			{
				// Force reload of page
				window.setTimeout(function() {
					location.href='<%=luci.dispatcher.build_url("admin/overthebox/overview")%>'
				}, 1000);
			}
		);
	}

	var startingDhcp = false;
	function start_dhpcserver()
	{
		stxhr.get('<%=luci.dispatcher.build_url("admin", "overthebox", "dhcp_start_server")%>', null,
			function(x)
			{
		                // clear out loading icon
		                window.setTimeout(function() {
			                location.href='<%=luci.dispatcher.build_url("admin/overthebox/overview")%>'
		                }, 1000);
			}
	 	);
	}


	var DHCPSectionENUM = {
		STILL_ACTIVE: 0,
		IS_DISABLED: 1,
		CHECKING: 2,
		FOUND: 3,
	}

	var DHCPSection = function(title, icon){
		this.title = title;
		this.icon = icon;
	}

	function getDhcpSection(status)
	{
		var section = new DHCPSection("","","");

		switch(status){
			case  DHCPSectionENUM.STILL_ACTIVE:
				section = new DHCPSection("<%:DHCP server still active%>", "<%=resource%>/ovh/images/statusWarning.png");
				break;
			case  DHCPSectionENUM.IS_DISABLED:
				section = new DHCPSection("<%:Remote DHCP is disabled%>", "<%=resource%>/ovh/images/statusWarning.png");
				break;
			case  DHCPSectionENUM.CHECKING:
				section = new DHCPSection("<%:Checking for active DHCP...%>", "<%=resource%>/ovh/images/statusWarning.png");
				break;
			case  DHCPSectionENUM.FOUND:
				section = new DHCPSection("<%:Active DHCP found on your network%>", "<%=resource%>/ovh/images/statusWarning.png");
				break;
		}

		return section;
	}

	function getDHCPSectionTemplate(icon, title, content)
	{
		return '<div class="dhcp_section">' +
				'<div class="dhcp_section_header">' +
				'<img src="' + icon + '" />' +
				'<span class="status_title">'+ title +'</span></div>' +
				'<div class="dhcp_section_server_content">' + content + '</div>' +
				'</div>';

	}

	XHR.poll(3, '<%=luci.dispatcher.build_url("admin", "overthebox", "dhcp_status")%>', null,
        function(x, mArray)
        {
		var status = document.getElementById('dhcpserver_status_text');

		if (!mArray)
		{
			return;
		}

		if (mArray.detected_dhcp_servers)
		{
			var dhcp_wizard = document.getElementById('dhcp_wizard');
			dhcp_wizard.innerHTML = '';

			for (var intf in mArray.detected_dhcp_servers)
			{
				var lastlease = mArray.detected_dhcp_servers[intf].timestamp;
				var lastcheck = mArray.detected_dhcp_servers[intf].lastcheck;
				var timestamp = Date.now() / 1000;
				var timeout   = 30;

				if( lastlease )
				{
					var ipAddr = mArray.detected_dhcp_servers[intf].siaddr || mArray.detected_dhcp_servers[intf].serverid || mArray.detected_dhcp_servers[intf].router;
					var router = mArray.detected_dhcp_servers[intf].router;

					if( lastcheck )
					{
						if( lastlease >= lastcheck ) // The DHCP server still running
						{
							if (stepbar)
								stepbar.remoteDhcp.status = "error";

							var html = '<fieldset id="desactivate_dhcp_field" class="cbi-section">';

							content = "";
							content += '<table width="100%" cellspacing="10">';
	                                                content += '<tr><td width="33%"><%:IP Address%></td>';
	                                                content += String.format('<td><a href="http://%s">%s</a></td></tr>', ipAddr, ipAddr);
	                                                content += '<tr><td width="33%"><%:Leased router%></td>';
	                                                content += String.format('<td><a href="http://%s">%s</a></td></tr>', router, router);
							content += '<tr><td width="33%"><%:Help%></td><td><a href="https://docs.ovh.com/pages/releaseview.action?pageId=18123335#Mes10premièresminutesavecOverTheBox-Modem1" target="_blank"><%:How to disable DHCP%></a></td></tr>';
							content += '</table>';
							content += '<div id="dhcp_recheck_button" class="cbi-page-actions">';
							content += '<input type="button" onclick="recheck_dhpcserver()" value="<%:Recheck%>" class="cbi-button cbi-button-apply" />';
							content += '</div>';

							var section = getDhcpSection(DHCPSectionENUM.STILL_ACTIVE);
							html += getDHCPSectionTemplate(section.icon, section.title, content);
							html += '</fieldset>';

							dhcp_wizard.innerHTML = html;
						}
						else
						{
							if( timestamp - lastcheck > timeout ) // The DHCP server is timedout (30 sec)
							{
								if( intf != 'if0') // if we detect a dhcp server on if0 is that we already know this router
								{
									if (stepbar)
										stepbar.remoteDhcp.status = "done";

									if ( mArray.running_dhcp_service.keys().length() == 0 ) {

										var html = '<fieldset id="activate_button_field" class="cbi-section">';

										content = "";
				                                                //content += '<legend><%:Remote DHCP is disabled%></legend>';
				                                                content += '<table width="100%" cellspacing="10">';
										content += '<tr><td width="33%"><%:What to do%></td><td><%:Click on the button to takeover%></td></tr>';
				                                                content += '</table>';
			        	                                        content += '<div id="dhcp_recheck_button" class="cbi-page-actions">';
			                	                                content += '<input type="button" onclick="start_dhpcserver()" value="<%:Start DHCP server%>" class="cbi-button cbi-button-apply" />';
										content += '</div>';

										var section = getDhcpSection(DHCPSectionENUM.IS_DISABLED);
										html += getDHCPSectionTemplate(section.icon, section.title, content);
										html += '</fieldset>';

										dhcp_wizard.innerHTML = html;
									}
								}
							}
							else // DHCP has not answered yet
							{
								if (stepbar)
									stepbar.remoteDhcp.status = "doing";

								var html = '<fieldset id="activate_button_field" class="cbi-section">';

								var content = "";
								content += '<table width="100%" cellspacing="10">';
								content += '<tr><td><%:Please wait%> ' + Math.round(timeout - (timestamp - lastcheck)) + ' <%:seconds%></td></tr>';
		                                                content += '</table>';
		                                                content += '<div id="dhcp_recheck_button" class="cbi-page-actions">';
		                                                content += '<input type="button" onclick="skiptimer()" value="<%:Skip%>" class="cbi-button cbi-button-apply" />';
								content += '</div>';

								var section = getDhcpSection(DHCPSectionENUM.CHECKING);
								html += getDHCPSectionTemplate(section.icon, section.title, content);
								html += '</fieldset>';

								dhcp_wizard.innerHTML = html;
							}
						}

					}
					else // A DHCP has been found, and we do not press the buton yet
					{
						if (stepbar)
							stepbar.remoteDhcp.status = "warn";

						var html = '<fieldset id="activate_button_field" class="cbi-section">';

						content = "";
						content += '<legend style="color: red;"><%:Active DHCP found on your network%></legend>';
		                                content += '<table width="100%" cellspacing="10">';
						content += '<tr><td width="33%"><%:IP Address%></td>';
						content += String.format('<td><a href="http://%s">%s</a></td></tr>', ipAddr, ipAddr);
						content += '<tr><td width="33%"><%:Leased router%></td>';
						content += String.format('<td><a href="http://%s">%s</a></td></tr>', router, router);
						content += '<tr><td width="33%"><%:Help%></td><td><a href="https://docs.ovh.com/pages/releaseview.action?pageId=18123335#Mes10premièresminutesavecOverTheBox-Modem1" target="_blank"><%:How to disable DHCP%></a></td></tr>';
		                                content += '</table>';
		                                content += '<div id="dhcp_recheck_button" class="cbi-page-actions">';
						content += '<input type="button" onclick="recheck_dhpcserver()" value="<%:Recheck%>" class="cbi-button cbi-button-apply" />';
						content += '</div>';

						var section = getDhcpSection(DHCPSectionENUM.FOUND);
						html += getDHCPSectionTemplate(section.icon, section.title, content);
						html += '</fieldset>';

						dhcp_wizard.innerHTML = html;
					}
				}
                        }
			if (stepbar && stepbar.remoteDhcp.status == 'todo') // No Alien DHCP Server found
				stepbar.remoteDhcp.status = "done"
		}
        }
	);

//]]></script>

<fieldset class="cbi-section">
<!--        <legend><%:Scanning for DHCP servers on your network%></legend> -->
	<div id="dhcp_wizard"></div>
</fieldset>
<!-- end of DHCP Wizard section -->
<% end %>
